Java Server Faces
・JavaEEという環境で動作する、ユーザーインターフェイスフレームワーク。
・JavaベースのWebアプリケーションフレームワークであり、コンポーネントベースのアプローチをとる。
・オープンソースフレームワークのため、誰でも使用することが出来る。
・「MVCモデル」と「UIコンポーネントでWebページを構成」という大きな特徴がある。

Spring Framework
・Javaプラットフォーム向けのオープンソースフレームワーク。
・特定のプログラミングモデルを強制するものではなく、EJBモデルの代替え・置き換え・追加をするフレームワーク。
・「変化に強い」「Spring MVC Testでテストが簡単」という特徴がある。
・Spring MVC Testは、専用ツールで、Spring MVCのテストを簡単に記述出来るようにします。

Struts
・Java ServletやJSPを用いたWebアプリケーション開発向きの、オープンソースフレームワーク。
・Struts1とStruts2が存在しており、Struts2が主流となっています。
・「MVCアーキテクチャ適用」「アノテーション機能で設定ファイルの削減」「プラグインで機能追加」「DIコンテナ機能で」がある。

Wicket
・Apacheソフトウェア財団のオープンソースのWebアプリケーションフレームワーク。
・WicketはJavaらしいオブジェクト指向言語を最大限に活用出来るフレームワークを目標として開発されている。
・「オブジェクト指向のためのフレームワーク」ということはもちろん、「独自に拡張可能」「Ajaxが統合されている」「ユニットテスト用のクラス提供」などの特徴がある。

SAStruts（Super Agile Struts）
・Strutsを使用した開発をスクリプト言語が保持するアジャイルを超えて生産性を高めるように開発されたフレームワーク。
・SAStrutsの特徴は、「Strutsベースでコードが少ない」ことと「設定ファイルがない」こと「FWに言損じないPOJOベース」「ドキュメントが充実している」ことなど。

Play Framework
・JavaとScalaで記述されているオープンソースのWebアプリケーションフレームワーク。
・「MVCアーキテクチャ適用」「IDEに依存しない」「コンパイル・サーバーの再起動不要」。

Java EE（Java Platform, Enterprise Edition）
・Java EEは、Javaによるエンタープライズシステムを構築するための技術の取り扱い方を定めたAPIやフレームワーク・ライブラリの集合のことを指す。大規模システム向けのフレームワークであり、企業システムの構築に必要な機能をまとめて提供してくれる。
・「Servlet APIあり」「DBAccessに必要なAPIセットあり」そして最大の利点ともいえる「JavaEEので開発が出来る」ことなどがあげられる。一方で、私用が大きすぎて変化に時間がかかるデメリットがある。

Dropwizard
・Microsoft YammerのバックエンWebサービスの為に開発されたフレームワーク。
・組み込みWebサーバやJaxRSベースのRESTフレームワークなどの基本的な機能が備わっているが、最大の特徴はフレームワークを使用したアプリのデプロイ方法。
・ビルド時に依存するライブラリをjarに全てパッケージングしてから、組み込みWebサーバを利用。そのため必要な作業は、jarファイルとymlファイルを置き換えてJavaアプリケーションを起動するだけ。

Spark Framework
・Javaで実装されたマイクロフレームワーク。
・「Java8構文に従うことにより、簡潔に記述出来、作業コストを削減できる」。
・「ドキュメントが充実」している。

Junit
・Javaで開発されたプログラムの単体テスト（ユニットテスト）を自動化するためのフレームワーク。
・「実装コードの動作を確認出来る」「リグレクションテストによりデグレード防止」「リファクタリングが行いやすい」
・単体テストを自動化できる。
・実装コードの動作を確認出来きるがそのコードが使用を満たしているという保証がないというデメリットが存在。